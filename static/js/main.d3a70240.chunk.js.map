{"version":3,"sources":["assets/coding.svg","services/feedProjects.js","pages/About/about.js","pages/Projects/projects.js","routes.js","pages/Header/header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","id","name","description","year","About","src","codingSVG","alt","vectorProjects","require","Projects","className","map","item","index","key","Routes","path","exact","component","Header","$","window","resize","css","innerWidth","console","log","type","onClick","document","ready","slideToggle","color","to","href","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,oC,0EC6B3CD,EAAOC,QA1BgB,CACnB,CACIC,GAAI,EACJC,KAAM,sBACNC,YAAa,iKACbC,KAAM,QAEV,CACIH,GAAI,EACJC,KAAM,kDACNC,YAAa,2GACbC,KAAM,QAEV,CACIH,GAAI,EACJC,KAAM,YACNC,YAAa,4DACbC,KAAM,QAEV,CACIH,GAAI,EACJC,KAAM,0BACNC,YAAa,mKACbC,KAAM,U,qJCHCC,EApBD,WACV,OACI,8BACI,iCACI,yBAAKJ,GAAG,kBACJ,wBAAIA,GAAG,SAAP,UACA,uBAAGA,GAAG,QAAN,gXAMJ,yBAAKA,GAAG,iBACJ,yBAAKK,IAAKC,IAAWC,IAAI,oBCZzCC,G,MAAiBC,EAAQ,KAyBdC,EAvBE,WACb,OACI,8BACI,6BAASC,UAAU,sBACf,wBAAIX,GAAG,kBAAP,iDACA,6BACI,wBAAIW,UAAU,iBACTH,EAAeI,KAAI,SAACC,EAAMC,GAAP,OAChB,wBAAIC,IAAKF,EAAKb,IACV,wBAAIA,GAAG,SAAP,WAAwBc,EAAQ,GAChC,2BAAG,wCAAoBD,EAAKZ,MAC5B,2BAAG,+CAA2BY,EAAKX,aACnC,2BAAG,wCAAoBW,EAAKV,eCZ7C,SAASa,IACpB,OACQ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWf,IACjC,kBAAC,IAAD,CAAOa,KAAK,YAAYE,UAAWT,K,2BC0CpCU,EA9CA,WAqBX,OAjBAC,IAAEC,QAAQC,QAAO,WACiC,SAA1CF,IAAE,qBAAqBG,IAAI,YAA0BH,IAAEC,QAAQG,aAAe,MAC9EJ,IAAE,qBAAqBG,IAAI,CAAC,QAAW,UACvCE,QAAQC,IAAI,cAE8B,UAA1CN,IAAE,qBAAqBG,IAAI,YAA2BH,IAAEC,QAAQG,cAAgB,MAChFJ,IAAE,qBAAqBG,IAAI,CAAC,QAAW,SACvCE,QAAQC,IAAI,gBAWhB,oCACA,gCACI,yBAAKhB,UAAU,YACX,yBAAKA,UAAU,cACX,4BAAQiB,KAAK,SAAS5B,GAAG,OAAO6B,QAXhD,WACIR,IAAES,UAAUC,OAAM,WACdV,IAAE,qBAAqBW,YAAY,UAS0B,kBAAC,IAAD,CAAaC,MAxBhE,cA0BN,yBAAKtB,UAAU,eACX,kBAAC,IAAD,CAAMA,UAAU,mBAAmBuB,GAAG,KAAI,kBAAC,IAAD,CAAQD,MA3BhD,YA2BmE,uCACrE,kBAAC,IAAD,CAAMtB,UAAU,mBAAmBuB,GAAG,aAAY,kBAAC,IAAD,CAASD,MA5BzD,YA4B4E,6CAGtF,yBAAKtB,UAAU,oBACX,4BACI,4BAAI,uBAAGwB,KAAK,sCAAqC,kBAAC,IAAD,CAAUF,MAjCzD,YAiC6E,0CAC/E,4BAAI,uBAAGE,KAAK,sDAAqD,kBAAC,IAAD,CAAYF,MAlC3E,YAkC+F,4CACjG,4BAAI,uBAAGE,KAAK,yCAAwC,kBAAC,IAAD,CAAYF,MAnC9D,YAmCkF,+CAIhG,yBAAKtB,UAAU,a,YC7BRyB,MATf,WACE,OACE,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAACpB,EAAD,QCDYqB,QACW,cAA7Bf,OAAOgB,SAASC,UAEe,UAA7BjB,OAAOgB,SAASC,UAEhBjB,OAAOgB,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFb,SAASc,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcf,MACrBgB,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLzB,QAAQyB,MAAMA,EAAMC,c","file":"static/js/main.d3a70240.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/coding.61a4c685.svg\";","//Lógica dessa área é inspirada num projeto do usuário vmnog do github\r\n//https://github.com/vmnog\r\n\r\nconst vectorProjects = [\r\n    {\r\n        id: 0,\r\n        name: 'Gerenciador de O.S.',\r\n        description: 'Um programa Desktop feito em C# com SQL Server que gerencia as ordens de serviços do Departamento de Informática da Prefeitura Municipal de Bebedouro/SP',\r\n        year: '2019'\r\n    },\r\n    {\r\n        id: 1,\r\n        name: 'Sistema da Biblioteca Municipal de Bebedouro/SP',\r\n        description: 'Supervisionado um sistema Desktop que gerencia os trabalhos feitos em uma biblioteca com C# e SQL Server',\r\n        year: '2019'\r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'Portfolio',\r\n        description: 'Essa página feita com ReactJS que serve como portfolio',\r\n        year: '2020'\r\n    },\r\n    {\r\n        id: 4,\r\n        name: 'Mapeamento: QuestFinder',\r\n        description: 'Iniciação Científica focada em criar um mapeamento universitário interno com Back-end feito em NodeJs e MongoDB e o Front-end feito com React Native',\r\n        year: '2020'\r\n    }];\r\n\r\nmodule.exports = vectorProjects;","import React from 'react';\r\nimport codingSVG from '../../assets/coding.svg';\r\n\r\nconst About = () => {\r\n    return (\r\n        <main>\r\n            <article>\r\n                <div id=\"container-text\">\r\n                    <h1 id=\"title\">About:</h1>  \r\n                    <p id=\"text\">Hi! My name is Erick Demori Malta, a student aspiring to become a FullStack developer\r\n                    someday. I live in Brazil and I'm currently studying JavaScript and some of its libraries, like JQuery, \r\n                    and frameworks, such as React, hence the reason I made this portfolio using it. \r\n                    In any case, I have some experience\r\n                    with C# and am a bit knowledgeable about Python and Java.</p>\r\n                </div>\r\n                <div id=\"container-img\">\r\n                    <img src={codingSVG} alt=\"Proud Coder\"/>\r\n                </div>\r\n            </article>\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nimport './styles.css';\r\n\r\nlet vectorProjects = require('../../services/feedProjects');\r\n\r\nconst Projects = () => {\r\n    return (\r\n        <main>\r\n            <article className=\"container-projects\">\r\n                <h1 id=\"title-projects\">Here are some of the projects I've worked on:</h1>\r\n                <div>\r\n                    <ul className=\"list-projects\">\r\n                        {vectorProjects.map((item, index) => (\r\n                            <li key={item.id}>\r\n                                <h2 id=\"title\">Project {index + 1}</h2>\r\n                                <p><span>Name: </span>{item.name}</p>\r\n                                <p><span>Description: </span>{item.description}</p>\r\n                                <p><span>Year: </span>{item.year}</p>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            </article>\r\n        </main>\r\n\r\n    );\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport About from './pages/About/about';\r\nimport Projects from './pages/Projects/projects';\r\n\r\nexport default function Routes() {\r\n    return (\r\n            <Switch>\r\n                <Route path=\"/\" exact component={About} />\r\n                <Route path=\"/projects\" component={Projects} />\r\n            </Switch>\r\n    );\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { FaHome, FaGithub, FaLinkedin, FaFacebook, FaTasks, FaEllipsisV } from 'react-icons/fa';\r\nimport $ from 'jquery';\r\n\r\n\r\nconst Header = () => {\r\n\r\n    const linkColor = \"#501b65\";\r\n\r\n    $(window).resize(() => {\r\n        if ($(\".nav-social-links\").css(\"display\") === \"none\" &&  $(window).innerWidth() > 806){\r\n            $(\".nav-social-links\").css({\"display\": \"block\"});\r\n            console.log(\"dei block\");\r\n        } \r\n        if ($(\".nav-social-links\").css(\"display\") === \"block\" &&  $(window).innerWidth() <= 806) {\r\n            $(\".nav-social-links\").css({\"display\": \"none\"});\r\n            console.log(\"dei none\");\r\n        }\r\n    });\r\n\r\n    function scrollMenu() {\r\n        $(document).ready(() => {\r\n            $(\".nav-social-links\").slideToggle(350);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <header>\r\n            <nav className=\"main-nav\">\r\n                <div className=\"mobile-bar\">\r\n                    <button type=\"button\" id=\"menu\" onClick={scrollMenu}><FaEllipsisV color={linkColor}/></button>\r\n                </div>\r\n                <div className=\"home-button\">\r\n                    <Link className=\"home-button-link\" to=\"/\"><FaHome color={linkColor}/><span>Home</span></Link>\r\n                    <Link className=\"home-button-link\" to=\"/projects\"><FaTasks color={linkColor}/><span>Projects</span></Link>\r\n                </div>\r\n            </nav>\r\n            <nav className=\"nav-social-links\">\r\n                <ul>\r\n                    <li><a href=\"https://github.com/ElladanTasartir\"><FaGithub color={linkColor} /><span>Github</span></a></li>\r\n                    <li><a href=\"https://www.linkedin.com/in/erick-malta-8597a1197/\"><FaLinkedin color={linkColor} /><span>LinkedIn</span></a></li>\r\n                    <li><a href=\"https://www.facebook.com/erick.demori\"><FaFacebook color={linkColor} /><span>Facebook</span></a></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n        <div className=\"spacer\"></div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport Routes from './routes'\nimport Header from './pages/Header/header';\n\nimport './pages/Header/styles.css';\nimport './pages/About/styles.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n        <Header />\n        <Routes />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}